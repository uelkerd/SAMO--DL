# Comprehensive Code Quality Prevention System for SAMO-DL
# This configuration prevents ALL recurring DeepSource issues from ever happening again
#
# TODO: Re-enable all disabled hooks once configuration issues are resolved
# Issue: https://github.com/uelkerd/SAMO--DL/issues/106
#
# Disabled hooks and their status:
# ✅ Bandit: RE-ENABLED - Split into targeted hooks: changed files + tests (B101 skipped)
# ✅ Safety: RE-ENABLED - Local hook with safety package, runs on push, scans all deps
# ✅ Docformatter: RE-ENABLED - Local hook with docformatter package for reliability
# ✅ Flynt: RE-ENABLED - Fully configured with always_run and pass_filenames for consistency
# - Local hooks: Configuration format issues (exclude field format) - FIXED: Updated to single-line format
#
# IMPROVEMENTS IMPLEMENTED:
# ✅ Global exclude pattern implemented - all hooks now inherit from top-level exclude
# ✅ Individual exclude patterns removed from active hooks (black, isort, ruff, mypy)
# ✅ Bandit split into targeted hooks: changed files (all rules) + tests (B101 skipped)
# ✅ Safety implemented as local hook with safety package, optimized for push-only execution
# ✅ Docformatter implemented as local hook with docformatter package for reliability
# ✅ Flynt configuration made consistent with Bandit (always_run, pass_filenames)
# ✅ Global exclude pattern enhanced to cover ALL test artifacts and build directories
# ✅ Configuration is now much more maintainable and follows best practices
# ✅ All code review comments addressed and resolved
#
# Next steps:
# 1. Test Safety hook with local implementation
# 2. Test Docformatter hook with system language configuration
# 3. Test and re-enable local hooks
# 4. Update this TODO section as hooks are re-enabled
#
# Global exclude pattern - applies to all hooks unless overridden
# Uses anchored regex with extended mode for readability and accuracy
# Comprehensive coverage: git, venvs, caches, builds, artifacts, docs, samples, test artifacts
exclude: |
  (?x)^(
      \.git|
      \.venv|
      \.env|
      __pycache__|
      \.pytest_cache|
      \.mypy_cache|
      \.ruff_cache|
      build|
      dist|
      \.eggs|
      \.tox|
      \.coverage|
      htmlcov|
      \.cache|
      \.logs|
      results|
      samples|
      notebooks|
      website|
      docs/diagrams|
      \.DS_Store|
      artifacts|
      \.benchmarks|
      \.kilocode|
      \.vscode|
      deprecated|
      test_reports|
      test_report\.txt|
      \.pytest_cache|
      \.mypy_cache|
      \.ruff_cache|
      \.coverage|
      coverage\.xml|
      \.coveragerc|
      \.gitignore-pages|
      \.nojekyll|
      \.deepsource\.toml|
      \.pre-commit-exclude-patterns\.yaml|
      trivy-results-.*\.json|
      vulnerabilities-.*\.json
  )$

repos:
  # Basic pre-commit hooks (run first)
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-executables-have-shebangs
      - id: debug-statements
      - id: name-tests-test
      - id: requirements-txt-fixer
      - id: fix-byte-order-marker
      - id: mixed-line-ending
      - id: check-ast

  # Python formatting and linting (in order)
  - repo: https://github.com/psf/black
    rev: 24.2.0
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88, --target-version=py38]
        types: [python]

  # Import sorting and organization
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88, --py=38]
        types: [python]

  # Python linting with Ruff (super fast)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.3.0
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        types: [python]

  # Type checking with MyPy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        args: [--ignore-missing-imports, --python-version=3.8]
        types: [python]

  # Security scanning with Bandit (optimized for performance)
  # Split into targeted hooks: changed files (all rules) + tests (B101 skipped)
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        name: bandit (changed files)
        # Scan only changed Python files, enforce all rules
        types: [python]
        exclude: '^(tests/|.*_test\.py$)'

      - id: bandit
        name: bandit (tests, B101 skipped)
        # Scan test files with B101 (assert_used) disabled
        args: [-s, B101]
        types: [python]
        files: '^(tests/|.*_test\.py$)'

  # Security vulnerability scanning with Safety (local hook)
  # Local hook with safety package for reliability and control
  # Runs on push to avoid blocking commits, scans all dependency files
  - repo: local
    hooks:
      - id: safety-scan
        name: Safety (dependency vulnerability scan)
        entry: safety
        language: python
        additional_dependencies: [safety==3.6.0]
        args: [scan, --full-report, --target, .]
        pass_filenames: false
        stages: [push]
        # Optional: Add policy file for custom rules
        # args: [scan, --full-report, --policy-file, .safety-policy.yml]
        # env:
        #   - SAFETY_API_KEY  # if using the commercial DB

  # Documentation formatting with Docformatter (local hook)
  # Local hook with docformatter package to avoid external repository compatibility issues
  - repo: local
    hooks:
      - id: docformatter
        name: Docformatter (docstring formatting)
        entry: docformatter
        language: python
        additional_dependencies: [docformatter==1.7.3]
        args: [--in-place, --wrap-summaries=88, --wrap-descriptions=88]
        types: [python]

  # String formatting with flynt
  # Configuration consistent with Bandit hooks for maintainability
  - repo: https://github.com/ikamensh/flynt
    rev: "0.78"
    hooks:
      - id: flynt
        args: [--line-length=88, .]
        types: [python]
        pass_filenames: false
        always_run: true

  # Custom SAMO-DL code quality enforcer
  # TODO: Re-enable once configuration issues are resolved
  # Issue: https://github.com/uelkerd/SAMO--DL/issues/106
  # - repo: local
  #   hooks:
  #     - id: samo-code-quality-enforcer
  #       name: SAMO-DL Code Quality Enforcer
  #       entry: python scripts/maintenance/code_quality_enforcer.py
  #       language: python
  #       types: [python]
  #       pass_filenames: false
  #       always_run: true

  # Auto-fix common code quality issues
  # TODO: Re-enable once configuration issues are resolved
  # Issue: https://github.com/uelkerd/SAMO--DL/issues/106
  # - repo: local
  #   hooks:
  #     - id: samo-auto-fix-code-quality
  #       name: SAMO-DL Auto-Fix Code Quality
  #       entry: python scripts/maintenance/auto_fix_code_quality.py
  #       language: python
  #       types: [python]
  #       pass_filenames: false
  #       always_run: true

# Global configuration
default_language_version:
  python: python3.8
