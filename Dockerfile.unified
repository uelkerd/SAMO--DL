# Unified AI API Dockerfile for Cloud Run
FROM python:3.10-slim-bookworm

# Set environment variables for Python
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONHASHSEED=random \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    HF_HOME=/app/models \
    TRANSFORMERS_CACHE=/app/models

# Set working directory
WORKDIR /app

# Install system dependencies
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates \
    curl \
    ffmpeg \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy requirements and install Python dependencies
COPY requirements-unified-fixed.txt .
RUN pip install --no-cache-dir -r requirements-unified-fixed.txt

# Copy source code
COPY src/ ./src/
COPY deployment/ ./deployment/
# (Optional) Omit test files from runtime image

# Allow skipping model pre-downloads
ARG PRELOAD_MODELS=true

RUN mkdir -p /app/models && \
    echo "Model pre-download toggle: ${PRELOAD_MODELS}" && \
    if [ "${PRELOAD_MODELS}" = "true" ]; then \
    echo "Pre-downloading models..." && \
    python -c "from transformers import AutoTokenizer, AutoModelForSequenceClassification; \
    model_name='duelker/samo-goemotions-deberta-v3-large'; \
    print(f'Downloading emotion model {model_name}...'); \
    AutoTokenizer.from_pretrained(model_name, cache_dir='/app/models'); \
    AutoModelForSequenceClassification.from_pretrained(model_name, cache_dir='/app/models'); \
    print('✓ Emotion model downloaded successfully');" && \
    python -c "from transformers import T5Tokenizer, T5ForConditionalGeneration; \
    model_name='t5-small'; \
    print(f'Downloading T5 model {model_name}...'); \
    T5Tokenizer.from_pretrained(model_name, cache_dir='/app/models'); \
    T5ForConditionalGeneration.from_pretrained(model_name, cache_dir='/app/models'); \
    print('✓ T5 model downloaded successfully');" && \
    python -c "import whisper; \
    model_size='base'; \
    print(f'Downloading Whisper model {model_size}...'); \
    whisper.load_model(model_size, download_root='/app/models'); \
    print('✓ Whisper model downloaded successfully');" && \
    echo "All models downloaded successfully!"; \
    else echo "Skipping model pre-download"; fi

# Create non-root user for security
RUN useradd -m -u 1000 appuser && \
    chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8080

# Set environment variables
ENV PYTHONPATH=/app
ENV PORT=8080

# Run the unified API
CMD ["python", "deployment/cloud-run/unified_ai_api.py"]
