[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}

[project]
name = "samo-dl"
version = "1.0.0b1"
description = "SAMO Deep Learning - Voice-First AI API"
authors = [
    {name = "SAMO Team", email = "team@samo.ai"}
]
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    # API Framework
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.23.0",
    "python-multipart>=0.0.6",
    "pydantic>=2.11.7,<3.0.0",
    "PyJWT>=2.8.0,<3.0.0",

    # Database & Storage
    "sqlalchemy>=2.0.0",
    "psycopg2-binary>=2.9.0",
    "pgvector>=0.2.0",
    "redis>=4.6.0",

    # Utilities
    "python-dotenv>=1.1.1,<2.0.0",
    "pyyaml>=6.0",
    "requests==2.32.4",
    "certifi>=2025.7.14,<2026.0.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "loguru>=0.7.0",
]

[project.optional-dependencies]
test = [
    "pytest>=8.4.1,<9.0.0",
    "pytest-cov>=6.2.1,<7.0.0",
    "pytest-xdist>=3.3.0",
    "pytest-mock>=3.11.0",
    "pytest-asyncio>=0.21.0",
    "pytest-timeout>=2.1.0",
    "pytest-benchmark>=4.0.0",
    "httpx>=0.24.0",  # For FastAPI testing
    "coverage[toml]>=7.2.0",
    "factory-boy>=3.3.0",  # For test data generation
]
dev = [
    "ruff>=0.0.280",
    "mypy>=1.7.1",
    "bandit[toml]>=1.7.6",
    # safety removed - kept optional in CI to avoid resolver backtracking
    "pre-commit>=3.5.0",
    "jupyterlab>=4.0.0",
    "ipykernel>=6.25.0",
]

[project.scripts]
samo-train = "training.cli:main"
samo-api = "unified_ai_api:main"

[project.urls]
"Homepage" = "https://github.com/samo-ai/samo-dl"
"Bug Reports" = "https://github.com/samo-ai/samo-dl/issues"
"Source" = "https://github.com/samo-ai/samo-dl"

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
# Enable pycodestyle, Pyflakes, and additional useful rules
select = ["E", "F", "B", "C4", "UP"]
ignore = ["E501"]  # line too long (handled by formatter)

[tool.ruff.lint.per-file-ignores]
# Allow imports to be at the top level in __init__.py files
"__init__.py" = ["F401"]
# Tests can use assertions and magic values
"tests/**/*" = ["S101", "PLR2004"]
# Scripts can use print statements and complex logic
"scripts/**/*" = ["T201", "PLR0915", "PLR0912"]

[tool.pylint.messages_control]
disable = [
    "C0114",  # missing-module-docstring
    "C0115",  # missing-class-docstring
    "C0116",  # missing-function-docstring
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "W0613",  # unused-argument (legitimate in interface implementations)
    "C0103",  # invalid-name
]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.basic]
good-names = ["i", "j", "k", "ex", "Run", "_", "id"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", "build", "dist", "*.egg-info"]

[tool.bandit]
exclude_dirs = ["tests", "scripts"]
skips = ["B101", "B601"]

[tool.mypy]
# Strategic mypy configuration - focus on core business logic
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Start lenient, tighten later
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = false  # Temporarily disabled during cleanup
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

# Strategic exclusions to eliminate noise and focus on core business logic
exclude = [
    # Legacy scripts - defer until core is stable
    "scripts/legacy/.*",
    # Maintenance utilities - non-critical path
    "scripts/maintenance/.*",
    # Testing scripts - can be addressed separately
    "scripts/testing/.*",
    # Deployment automation - secondary priority
    "scripts/deployment/vertex_ai_phase4_automation.py",
    # CI scripts - already have type annotations
    "scripts/ci/.*",
    # Jupyter notebooks and experimental training files (invalid syntax)
    "scripts/training/.*bulletproof.*",
]

# Focus on these critical paths first
files = [
    "src/",
    "scripts/training/",
    "scripts/database/",
]

[[tool.mypy.overrides]]
# Core business logic - zero tolerance for type unsafety
module = "src.*"
disallow_any_unimported = false
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_generics = false
disallow_subclassing_any = false

[[tool.mypy.overrides]]
# Training scripts - critical ML pipeline
module = "scripts.training.*"
check_untyped_defs = true

[[tool.mypy.overrides]]
# Database scripts - data integrity critical
module = "scripts.database.*"
check_untyped_defs = true
