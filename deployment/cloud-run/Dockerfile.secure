# Use official Python runtime with explicit platform targeting
# UPDATED: Python 3.13-slim-bookworm to keep stable Debian and allow pinned packages
FROM --platform=linux/amd64 python:3.13-slim-bookworm

# Set environment variables for Python
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONHASHSEED=random \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Set working directory
WORKDIR /app

# Install minimal system dependencies needed to build wheels and provide runtime curl
# Note: Avoid exact version pinning to prevent 404s on Debian mirrors
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    curl \
 && rm -rf /var/lib/apt/lists/* \
 && apt-get clean

# Copy secure requirements first for better caching
COPY deployment/cloud-run/requirements_secure.txt .

# Install Python dependencies, then remove build tools to keep final image slim
# Use python -m pip and a bounded pip upgrade range for safety
# Consider adding --require-hashes once requirements include hashes for hardened installs
RUN python -m pip install --no-cache-dir --upgrade "pip>=25.2,<25.3" \
 && python -m pip install --no-cache-dir -r requirements_secure.txt \
 && apt-get purge -y --auto-remove gcc g++ \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*

# Copy application code
COPY deployment/cloud-run/secure_api_server.py .
COPY deployment/cloud-run/security_headers.py .
COPY deployment/cloud-run/rate_limiter.py .
COPY deployment/cloud-run/model_utils.py .
COPY deployment/cloud-run/model/ ./model/

# Create non-root user for security (Cloud Run best practice)
RUN useradd -m -u 1000 appuser && \
    chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Expose port (Cloud Run requirement)
EXPOSE 8080

# Health check following Cloud Run best practices
# Temporarily commented out for debugging
# HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
#     CMD curl -f http://localhost:8080/health || exit 1

# Use exec form for CMD (Docker best practice)
# Set timeout to 0 for Cloud Run (allows unlimited request timeouts)
CMD exec gunicorn \
    --bind :$PORT \
    --workers 1 \
    --threads 8 \
    --timeout 0 \
    --keep-alive 5 \
    --max-requests 1000 \
    --max-requests-jitter 100 \
    --access-logfile - \
    --error-logfile - \
    --log-level info \
    secure_api_server:app
